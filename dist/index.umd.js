(function(i,r){typeof exports=="object"&&typeof module<"u"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(i=typeof globalThis<"u"?globalThis:i||self,r(i.BidiRpc={}))})(this,function(i){"use strict";var M=Object.defineProperty;var P=(i,r,l)=>r in i?M(i,r,{enumerable:!0,configurable:!0,writable:!0,value:l}):i[r]=l;var a=(i,r,l)=>(P(i,typeof r!="symbol"?r+"":r,l),l);const r="2.0",l=e=>e.jsonrpc===r&&typeof e.method=="string"&&Array.isArray(e.params),p=e=>({jsonrpc:r,id:e,error:{code:-32601,message:"Method not found"}}),y=(e,o)=>({jsonrpc:r,id:e,error:{code:-32603,message:"Unexpected error",data:o}}),v=e=>e&&e.jsonrpc===r&&typeof e.id=="string"&&e.result!==void 0,S=e=>e&&e.jsonrpc===r&&typeof e.id=="string"&&e.error&&typeof e.error.message=="string",g=e=>e&&e.jsonrpc===r&&typeof e.id=="string"&&("value"in e||"done"in e),w=e=>e&&typeof e[Symbol.asyncIterator]=="function";class h{constructor(){a(this,"_done");a(this,"iterator");a(this,"queue",[]);a(this,"resolvers",[]);this.iterator={next:o=>this.done?Promise.resolve({value:o,done:!0}):this.queue.length>0?Promise.resolve(this.queue.shift()):new Promise(u=>{this.resolvers.push(u)})}}get done(){return this._done&&this.queue.length===0}[Symbol.asyncIterator](){return this.iterator}next(){return this.iterator.next()}push(o){if(this._done)throw new Error("Cannot push after end");this.resolvers.length>0?this.resolvers.shift()({value:o,done:!1}):this.queue.push({value:o,done:!1})}end(){if(this._done)throw new Error("Cannot end after end");this._done=!0,this.resolvers.length>0?this.resolvers.shift()({value:void 0,done:!0}):this.queue.push({value:void 0,done:!0})}}function m(){const e=new Array(36);for(let o=0;o<36;o++)e[o]=Math.floor(Math.random()*16);return e[14]=4,e[19]=e[19]&=~(1<<2),e[19]=e[19]|=1<<3,e[8]=e[13]=e[18]=e[23]="-",e.map(o=>o.toString(16)).join("")}const b=(e,o)=>{const u=new Map,j=new Promise((c,t)=>{e.readyState===0?e.addEventListener("open",()=>{c()},{once:!0}):e.readyState===1?c():t(new Error("Socket is closed"))}),E=(c,t)=>{const d=m(),n=JSON.stringify({jsonrpc:r,id:d,method:c,params:t});return new Promise((s,f)=>{u.set(d,{resolve:s,reject:f}),e.send(n)})},I=new Proxy({},{get(c,t){return async(...d)=>(await j,E(String(t),d))}});return e.addEventListener("message",async c=>{try{const t=JSON.parse(c.data),d=n=>e.send(JSON.stringify({jsonrpc:r,...n}));if(t.jsonrpc!==r)return;if(l(t)){const n=o&&o[t.method];if(!n||typeof n!="function")return d(p(t.id));try{const s=await n.call(o,...t.params);if(w(s)){for await(const f of s)d({id:t.id,value:f});return d({id:t.id,done:!0})}else d({id:t.id,result:s});return}catch(s){return d(y(t.id,s))}}else if(v(t)){const n=u.get(t.id);n&&(n.resolve(t.result),u.delete(t.id))}else if(g(t)){const n=u.get(t.id);if(n){const s=n.iterableSink||new h;n.iterableSink=s,t.done?(s.end(),u.delete(t.id),n.resolve(s)):(s.push(t.value),n.resolve(s))}}else if(S(t)){const n=u.get(t.id);n&&(n.reject(t.error),u.delete(t.id))}}catch{e.send(JSON.stringify({jsonrpc:r,error:{code:-32601,message:"Invalid JSON"}}))}}),I};i.AsyncIterableSink=h,i.makeSocketRpc=b,Object.defineProperties(i,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
